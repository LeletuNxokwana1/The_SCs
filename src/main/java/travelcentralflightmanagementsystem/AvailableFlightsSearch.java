/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package travelcentralflightmanagementsystem;

import java.awt.Color;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author lelet
 */
public class AvailableFlightsSearch extends javax.swing.JFrame {

    String departureAirport;
    String arrivalAirport;
    String departureDate;
    String returnDate;
    int numPassengers;
    String travelClass;
    boolean oneWay;
    Date depDate;
    Date retDate;

    // List to store available flights
    private List<ScheduledFlight> scheduledFlights;

    // Index to keep track of currently displayed flights
    private int currentIndex;

    private JPanel[] flightInfoPanels;

    private int currentPage = 0; // Current page of flights
    private int totalPages;     // Total number of pages
    private int numPanelsToShow;

    public AvailableFlightsSearch() {
        initComponents();

        // Display flight information when the instance is created
        displayNextFlights(5);
    }

    // get inserted flight search information
    public AvailableFlightsSearch(String departureAirport, String arrivalAirport, String departureDate, String returnDate, int numPassengers, String travelClass, boolean oneWay) {
        this.departureAirport = departureAirport;
        this.arrivalAirport = arrivalAirport;
        this.departureDate = departureDate;
        this.returnDate = returnDate;
        this.numPassengers = numPassengers;
        this.travelClass = travelClass;
        this.oneWay = oneWay;

        initComponents();

        this.flightInfoPanels = new JPanel[]{pnlFlightInfo1, pnlFlightInfo2, pnlFlightInfo3, pnlFlightInfo4, pnlFlightInfo5};

        scheduledFlights = new ArrayList<>();

        currentIndex = 0;

        // Define the date format pattern for a date without time
        String pattern = "yyyy-MM-dd";
        SimpleDateFormat dateFormat = new SimpleDateFormat(pattern);

        try {
            // Parse the String and convert it to a Date for departureDate
            depDate = dateFormat.parse(departureDate);

            if (returnDate != null) {
                // Parse the String and convert it to a Date for returnDate
                retDate = dateFormat.parse(returnDate);
            }
        } catch (ParseException e) {
            e.printStackTrace();
        }

        btnPreviousFlights.setVisible(false);

        ProgramManager programManager = new ProgramManager();
        scheduledFlights = programManager.retrieveFlights(this.departureAirport, this.arrivalAirport, this.depDate);

        // Display flight information when the instance is created
        displayNextFlights(5);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        minMaxDateEvaluator1 = new com.toedter.calendar.MinMaxDateEvaluator();
        pnlMenu = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        pnlAvailableFlightsTxt = new javax.swing.JPanel();
        lblAvailableFlightsTxt = new javax.swing.JLabel();
        btnHowToBook = new javax.swing.JButton();
        pnlFlightInfo1 = new javax.swing.JPanel();
        lblDepartureIATA1 = new javax.swing.JLabel();
        lblDepartureTime1 = new javax.swing.JLabel();
        lblArrivalIATA1 = new javax.swing.JLabel();
        lblArrivalTime1 = new javax.swing.JLabel();
        lblArrow1 = new javax.swing.JLabel();
        lblAicraftName1 = new javax.swing.JLabel();
        jSprtr1 = new javax.swing.JSeparator();
        lblClass1 = new javax.swing.JLabel();
        lblAvailableSeats1 = new javax.swing.JLabel();
        btnPrice1 = new javax.swing.JButton();
        pnlFlightInfo2 = new javax.swing.JPanel();
        lblDepartureIATA2 = new javax.swing.JLabel();
        lblDepartureTime2 = new javax.swing.JLabel();
        lblArrivalIATA2 = new javax.swing.JLabel();
        lblArrivalTime2 = new javax.swing.JLabel();
        lblArrow2 = new javax.swing.JLabel();
        lblAicraftName2 = new javax.swing.JLabel();
        jSprtr2 = new javax.swing.JSeparator();
        lblClass2 = new javax.swing.JLabel();
        lblAvailableSeats2 = new javax.swing.JLabel();
        btnPrice2 = new javax.swing.JButton();
        pnlFlightInfo3 = new javax.swing.JPanel();
        lblDepartureIATA3 = new javax.swing.JLabel();
        lblDepartureTime3 = new javax.swing.JLabel();
        lblArrivalIATA3 = new javax.swing.JLabel();
        lblArrivalTime3 = new javax.swing.JLabel();
        lblArrow3 = new javax.swing.JLabel();
        lblAicraftName3 = new javax.swing.JLabel();
        jSprtr3 = new javax.swing.JSeparator();
        lblClass3 = new javax.swing.JLabel();
        lblAvailableSeats3 = new javax.swing.JLabel();
        btnPrice3 = new javax.swing.JButton();
        pnlFlightInfo4 = new javax.swing.JPanel();
        lblDepartureIATA4 = new javax.swing.JLabel();
        lblDepartureTime4 = new javax.swing.JLabel();
        lblArrivalIATA4 = new javax.swing.JLabel();
        lblArrivalTime4 = new javax.swing.JLabel();
        lblArrow4 = new javax.swing.JLabel();
        lblAicraftName4 = new javax.swing.JLabel();
        jSprtr4 = new javax.swing.JSeparator();
        lblClass4 = new javax.swing.JLabel();
        lblAvailableSeats4 = new javax.swing.JLabel();
        btnPrice4 = new javax.swing.JButton();
        pnlFlightInfo5 = new javax.swing.JPanel();
        lblDepartureIATA5 = new javax.swing.JLabel();
        lblDepartureTime5 = new javax.swing.JLabel();
        lblArrivalIATA5 = new javax.swing.JLabel();
        lblArrivalTime5 = new javax.swing.JLabel();
        lblArrow5 = new javax.swing.JLabel();
        lblAicraftName5 = new javax.swing.JLabel();
        jSprtr5 = new javax.swing.JSeparator();
        lblClass5 = new javax.swing.JLabel();
        lblAvailableSeats5 = new javax.swing.JLabel();
        btnPrice5 = new javax.swing.JButton();
        btnNextFlights = new javax.swing.JButton();
        btnPreviousFlights = new javax.swing.JButton();
        btnBackToSearch = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(1536, 807));

        pnlMenu.setBackground(new java.awt.Color(0, 0, 0));
        pnlMenu.setPreferredSize(new java.awt.Dimension(1536, 1550));
        pnlMenu.setLayout(null);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setMaximumSize(new java.awt.Dimension(32767, 666666666));
        jPanel1.setPreferredSize(new java.awt.Dimension(1347, 1055580));

        pnlAvailableFlightsTxt.setBackground(new java.awt.Color(0, 0, 0));
        pnlAvailableFlightsTxt.setLayout(null);

        lblAvailableFlightsTxt.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        lblAvailableFlightsTxt.setForeground(new java.awt.Color(255, 255, 255));
        lblAvailableFlightsTxt.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblAvailableFlightsTxt.setText("Available Flights for Specified Date");
        pnlAvailableFlightsTxt.add(lblAvailableFlightsTxt);
        lblAvailableFlightsTxt.setBounds(10, 10, 970, 48);

        btnHowToBook.setBackground(new java.awt.Color(153, 153, 0));
        btnHowToBook.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        btnHowToBook.setText("How to Book these Flights ?");
        btnHowToBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHowToBookActionPerformed(evt);
            }
        });

        pnlFlightInfo1.setBackground(new java.awt.Color(255, 255, 255));
        pnlFlightInfo1.setBorder(javax.swing.BorderFactory.createEtchedBorder(null, java.awt.Color.black));
        pnlFlightInfo1.setPreferredSize(new java.awt.Dimension(640, 273));
        pnlFlightInfo1.setLayout(null);

        lblDepartureIATA1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblDepartureIATA1.setText("DepIATA");
        pnlFlightInfo1.add(lblDepartureIATA1);
        lblDepartureIATA1.setBounds(60, 30, 100, 25);

        lblDepartureTime1.setBackground(new java.awt.Color(255, 255, 255));
        lblDepartureTime1.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        lblDepartureTime1.setForeground(new java.awt.Color(153, 153, 0));
        lblDepartureTime1.setText("HH:MM");
        pnlFlightInfo1.add(lblDepartureTime1);
        lblDepartureTime1.setBounds(60, 50, 130, 40);

        lblArrivalIATA1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblArrivalIATA1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblArrivalIATA1.setText("ArrIATA");
        pnlFlightInfo1.add(lblArrivalIATA1);
        lblArrivalIATA1.setBounds(530, 30, 100, 25);

        lblArrivalTime1.setBackground(new java.awt.Color(255, 255, 255));
        lblArrivalTime1.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        lblArrivalTime1.setForeground(new java.awt.Color(153, 153, 0));
        lblArrivalTime1.setText("HH:MM");
        pnlFlightInfo1.add(lblArrivalTime1);
        lblArrivalTime1.setBounds(510, 50, 130, 40);

        lblArrow1.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        lblArrow1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblArrow1.setText("------------->-------------");
        pnlFlightInfo1.add(lblArrow1);
        lblArrow1.setBounds(180, 50, 330, 32);

        lblAicraftName1.setBackground(new java.awt.Color(153, 153, 0));
        lblAicraftName1.setForeground(new java.awt.Color(255, 255, 255));
        lblAicraftName1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblAicraftName1.setText("Aircraft");
        lblAicraftName1.setOpaque(true);
        pnlFlightInfo1.add(lblAicraftName1);
        lblAicraftName1.setBounds(270, 40, 160, 16);
        pnlFlightInfo1.add(jSprtr1);
        jSprtr1.setBounds(60, 100, 590, 10);

        lblClass1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblClass1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblClass1.setText("Name Class");
        pnlFlightInfo1.add(lblClass1);
        lblClass1.setBounds(70, 130, 180, 16);

        lblAvailableSeats1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblAvailableSeats1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblAvailableSeats1.setText("Num Seats Remaining");
        pnlFlightInfo1.add(lblAvailableSeats1);
        lblAvailableSeats1.setBounds(260, 130, 180, 16);

        btnPrice1.setBackground(new java.awt.Color(255, 204, 51));
        btnPrice1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnPrice1.setForeground(new java.awt.Color(255, 255, 255));
        btnPrice1.setText("Price");
        btnPrice1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrice1ActionPerformed(evt);
            }
        });
        pnlFlightInfo1.add(btnPrice1);
        btnPrice1.setBounds(500, 110, 140, 50);

        pnlFlightInfo2.setBackground(new java.awt.Color(255, 255, 255));
        pnlFlightInfo2.setBorder(javax.swing.BorderFactory.createEtchedBorder(null, java.awt.Color.black));
        pnlFlightInfo2.setPreferredSize(new java.awt.Dimension(640, 273));
        pnlFlightInfo2.setLayout(null);

        lblDepartureIATA2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblDepartureIATA2.setText("DepIATA");
        pnlFlightInfo2.add(lblDepartureIATA2);
        lblDepartureIATA2.setBounds(60, 30, 100, 25);

        lblDepartureTime2.setBackground(new java.awt.Color(255, 255, 255));
        lblDepartureTime2.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        lblDepartureTime2.setForeground(new java.awt.Color(153, 153, 0));
        lblDepartureTime2.setText("HH:MM");
        pnlFlightInfo2.add(lblDepartureTime2);
        lblDepartureTime2.setBounds(60, 50, 130, 40);

        lblArrivalIATA2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblArrivalIATA2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblArrivalIATA2.setText("ArrIATA");
        pnlFlightInfo2.add(lblArrivalIATA2);
        lblArrivalIATA2.setBounds(530, 30, 100, 25);

        lblArrivalTime2.setBackground(new java.awt.Color(255, 255, 255));
        lblArrivalTime2.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        lblArrivalTime2.setForeground(new java.awt.Color(153, 153, 0));
        lblArrivalTime2.setText("HH:MM");
        pnlFlightInfo2.add(lblArrivalTime2);
        lblArrivalTime2.setBounds(510, 50, 130, 40);

        lblArrow2.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        lblArrow2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblArrow2.setText("------------->-------------");
        pnlFlightInfo2.add(lblArrow2);
        lblArrow2.setBounds(180, 50, 330, 32);

        lblAicraftName2.setBackground(new java.awt.Color(153, 153, 0));
        lblAicraftName2.setForeground(new java.awt.Color(255, 255, 255));
        lblAicraftName2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblAicraftName2.setText("Aircraft");
        lblAicraftName2.setOpaque(true);
        pnlFlightInfo2.add(lblAicraftName2);
        lblAicraftName2.setBounds(270, 40, 160, 16);
        pnlFlightInfo2.add(jSprtr2);
        jSprtr2.setBounds(60, 100, 590, 10);

        lblClass2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblClass2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblClass2.setText("Name Class");
        pnlFlightInfo2.add(lblClass2);
        lblClass2.setBounds(70, 130, 180, 16);

        lblAvailableSeats2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblAvailableSeats2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblAvailableSeats2.setText("Num Seats Remaining");
        pnlFlightInfo2.add(lblAvailableSeats2);
        lblAvailableSeats2.setBounds(260, 130, 180, 16);

        btnPrice2.setBackground(new java.awt.Color(255, 204, 51));
        btnPrice2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnPrice2.setForeground(new java.awt.Color(255, 255, 255));
        btnPrice2.setText("Price");
        btnPrice2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrice2ActionPerformed(evt);
            }
        });
        pnlFlightInfo2.add(btnPrice2);
        btnPrice2.setBounds(500, 110, 140, 50);

        pnlFlightInfo3.setBackground(new java.awt.Color(255, 255, 255));
        pnlFlightInfo3.setBorder(javax.swing.BorderFactory.createEtchedBorder(null, java.awt.Color.black));
        pnlFlightInfo3.setPreferredSize(new java.awt.Dimension(640, 273));
        pnlFlightInfo3.setLayout(null);

        lblDepartureIATA3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblDepartureIATA3.setText("DepIATA");
        pnlFlightInfo3.add(lblDepartureIATA3);
        lblDepartureIATA3.setBounds(60, 30, 100, 25);

        lblDepartureTime3.setBackground(new java.awt.Color(255, 255, 255));
        lblDepartureTime3.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        lblDepartureTime3.setForeground(new java.awt.Color(153, 153, 0));
        lblDepartureTime3.setText("HH:MM");
        pnlFlightInfo3.add(lblDepartureTime3);
        lblDepartureTime3.setBounds(60, 50, 130, 40);

        lblArrivalIATA3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblArrivalIATA3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblArrivalIATA3.setText("ArrIATA");
        pnlFlightInfo3.add(lblArrivalIATA3);
        lblArrivalIATA3.setBounds(530, 30, 100, 25);

        lblArrivalTime3.setBackground(new java.awt.Color(255, 255, 255));
        lblArrivalTime3.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        lblArrivalTime3.setForeground(new java.awt.Color(153, 153, 0));
        lblArrivalTime3.setText("HH:MM");
        pnlFlightInfo3.add(lblArrivalTime3);
        lblArrivalTime3.setBounds(510, 50, 130, 40);

        lblArrow3.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        lblArrow3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblArrow3.setText("------------->-------------");
        pnlFlightInfo3.add(lblArrow3);
        lblArrow3.setBounds(180, 50, 330, 32);

        lblAicraftName3.setBackground(new java.awt.Color(153, 153, 0));
        lblAicraftName3.setForeground(new java.awt.Color(255, 255, 255));
        lblAicraftName3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblAicraftName3.setText("Aircraft");
        lblAicraftName3.setOpaque(true);
        pnlFlightInfo3.add(lblAicraftName3);
        lblAicraftName3.setBounds(270, 40, 160, 16);
        pnlFlightInfo3.add(jSprtr3);
        jSprtr3.setBounds(60, 100, 590, 10);

        lblClass3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblClass3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblClass3.setText("Name Class");
        pnlFlightInfo3.add(lblClass3);
        lblClass3.setBounds(70, 130, 180, 16);

        lblAvailableSeats3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblAvailableSeats3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblAvailableSeats3.setText("Num Seats Remaining");
        pnlFlightInfo3.add(lblAvailableSeats3);
        lblAvailableSeats3.setBounds(260, 130, 180, 16);

        btnPrice3.setBackground(new java.awt.Color(255, 204, 51));
        btnPrice3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnPrice3.setForeground(new java.awt.Color(255, 255, 255));
        btnPrice3.setText("Price");
        btnPrice3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrice3ActionPerformed(evt);
            }
        });
        pnlFlightInfo3.add(btnPrice3);
        btnPrice3.setBounds(500, 110, 140, 50);

        pnlFlightInfo4.setBackground(new java.awt.Color(255, 255, 255));
        pnlFlightInfo4.setBorder(javax.swing.BorderFactory.createEtchedBorder(null, java.awt.Color.black));
        pnlFlightInfo4.setPreferredSize(new java.awt.Dimension(640, 273));
        pnlFlightInfo4.setLayout(null);

        lblDepartureIATA4.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblDepartureIATA4.setText("DepIATA");
        pnlFlightInfo4.add(lblDepartureIATA4);
        lblDepartureIATA4.setBounds(60, 30, 100, 25);

        lblDepartureTime4.setBackground(new java.awt.Color(255, 255, 255));
        lblDepartureTime4.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        lblDepartureTime4.setForeground(new java.awt.Color(153, 153, 0));
        lblDepartureTime4.setText("HH:MM");
        pnlFlightInfo4.add(lblDepartureTime4);
        lblDepartureTime4.setBounds(60, 50, 130, 40);

        lblArrivalIATA4.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblArrivalIATA4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblArrivalIATA4.setText("ArrIATA");
        pnlFlightInfo4.add(lblArrivalIATA4);
        lblArrivalIATA4.setBounds(530, 30, 100, 25);

        lblArrivalTime4.setBackground(new java.awt.Color(255, 255, 255));
        lblArrivalTime4.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        lblArrivalTime4.setForeground(new java.awt.Color(153, 153, 0));
        lblArrivalTime4.setText("HH:MM");
        pnlFlightInfo4.add(lblArrivalTime4);
        lblArrivalTime4.setBounds(510, 50, 130, 40);

        lblArrow4.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        lblArrow4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblArrow4.setText("------------->-------------");
        pnlFlightInfo4.add(lblArrow4);
        lblArrow4.setBounds(180, 50, 330, 32);

        lblAicraftName4.setBackground(new java.awt.Color(153, 153, 0));
        lblAicraftName4.setForeground(new java.awt.Color(255, 255, 255));
        lblAicraftName4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblAicraftName4.setText("Aircraft");
        lblAicraftName4.setOpaque(true);
        pnlFlightInfo4.add(lblAicraftName4);
        lblAicraftName4.setBounds(270, 40, 160, 16);
        pnlFlightInfo4.add(jSprtr4);
        jSprtr4.setBounds(60, 100, 590, 10);

        lblClass4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblClass4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblClass4.setText("Name Class");
        pnlFlightInfo4.add(lblClass4);
        lblClass4.setBounds(70, 130, 180, 16);

        lblAvailableSeats4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblAvailableSeats4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblAvailableSeats4.setText("Num Seats Remaining");
        pnlFlightInfo4.add(lblAvailableSeats4);
        lblAvailableSeats4.setBounds(260, 130, 180, 16);

        btnPrice4.setBackground(new java.awt.Color(255, 204, 51));
        btnPrice4.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnPrice4.setForeground(new java.awt.Color(255, 255, 255));
        btnPrice4.setText("Price");
        btnPrice4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrice4ActionPerformed(evt);
            }
        });
        pnlFlightInfo4.add(btnPrice4);
        btnPrice4.setBounds(500, 110, 140, 50);

        pnlFlightInfo5.setBackground(new java.awt.Color(255, 255, 255));
        pnlFlightInfo5.setBorder(javax.swing.BorderFactory.createEtchedBorder(null, java.awt.Color.black));
        pnlFlightInfo5.setPreferredSize(new java.awt.Dimension(640, 273));
        pnlFlightInfo5.setLayout(null);

        lblDepartureIATA5.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblDepartureIATA5.setText("DepIATA");
        pnlFlightInfo5.add(lblDepartureIATA5);
        lblDepartureIATA5.setBounds(60, 30, 100, 25);

        lblDepartureTime5.setBackground(new java.awt.Color(255, 255, 255));
        lblDepartureTime5.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        lblDepartureTime5.setForeground(new java.awt.Color(153, 153, 0));
        lblDepartureTime5.setText("HH:MM");
        pnlFlightInfo5.add(lblDepartureTime5);
        lblDepartureTime5.setBounds(60, 50, 130, 40);

        lblArrivalIATA5.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblArrivalIATA5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblArrivalIATA5.setText("ArrIATA");
        pnlFlightInfo5.add(lblArrivalIATA5);
        lblArrivalIATA5.setBounds(530, 30, 100, 25);

        lblArrivalTime5.setBackground(new java.awt.Color(255, 255, 255));
        lblArrivalTime5.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        lblArrivalTime5.setForeground(new java.awt.Color(153, 153, 0));
        lblArrivalTime5.setText("HH:MM");
        pnlFlightInfo5.add(lblArrivalTime5);
        lblArrivalTime5.setBounds(510, 50, 130, 40);

        lblArrow5.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        lblArrow5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblArrow5.setText("------------->-------------");
        pnlFlightInfo5.add(lblArrow5);
        lblArrow5.setBounds(180, 50, 330, 32);

        lblAicraftName5.setBackground(new java.awt.Color(153, 153, 0));
        lblAicraftName5.setForeground(new java.awt.Color(255, 255, 255));
        lblAicraftName5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblAicraftName5.setText("Aircraft");
        lblAicraftName5.setOpaque(true);
        pnlFlightInfo5.add(lblAicraftName5);
        lblAicraftName5.setBounds(270, 40, 160, 16);
        pnlFlightInfo5.add(jSprtr5);
        jSprtr5.setBounds(60, 100, 590, 10);

        lblClass5.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblClass5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblClass5.setText("Name Class");
        pnlFlightInfo5.add(lblClass5);
        lblClass5.setBounds(70, 130, 180, 16);

        lblAvailableSeats5.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblAvailableSeats5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblAvailableSeats5.setText("Num Seats Remaining");
        pnlFlightInfo5.add(lblAvailableSeats5);
        lblAvailableSeats5.setBounds(260, 130, 180, 16);

        btnPrice5.setBackground(new java.awt.Color(255, 204, 51));
        btnPrice5.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnPrice5.setForeground(new java.awt.Color(255, 255, 255));
        btnPrice5.setText("Price");
        btnPrice5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrice5ActionPerformed(evt);
            }
        });
        pnlFlightInfo5.add(btnPrice5);
        btnPrice5.setBounds(500, 110, 140, 50);

        btnNextFlights.setBackground(new java.awt.Color(0, 0, 0));
        btnNextFlights.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnNextFlights.setForeground(new java.awt.Color(255, 255, 255));
        btnNextFlights.setText("Next Flights");
        btnNextFlights.setPreferredSize(new java.awt.Dimension(72, 32));
        btnNextFlights.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextFlightsActionPerformed(evt);
            }
        });

        btnPreviousFlights.setBackground(new java.awt.Color(0, 0, 0));
        btnPreviousFlights.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnPreviousFlights.setForeground(new java.awt.Color(255, 255, 255));
        btnPreviousFlights.setText("Previous Flights");
        btnPreviousFlights.setPreferredSize(new java.awt.Dimension(72, 32));
        btnPreviousFlights.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPreviousFlightsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(280, 280, 280)
                .addComponent(pnlAvailableFlightsTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 978, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(270, 270, 270))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlFlightInfo4, javax.swing.GroupLayout.PREFERRED_SIZE, 707, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pnlFlightInfo3, javax.swing.GroupLayout.PREFERRED_SIZE, 707, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pnlFlightInfo2, javax.swing.GroupLayout.PREFERRED_SIZE, 707, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                            .addComponent(btnHowToBook, javax.swing.GroupLayout.PREFERRED_SIZE, 360, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(581, 581, 581))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                            .addComponent(pnlFlightInfo1, javax.swing.GroupLayout.PREFERRED_SIZE, 707, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(408, 408, 408)))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(btnPreviousFlights, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnNextFlights, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(pnlFlightInfo5, javax.swing.GroupLayout.PREFERRED_SIZE, 707, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(pnlAvailableFlightsTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnHowToBook, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(pnlFlightInfo1, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(pnlFlightInfo2, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addComponent(pnlFlightInfo3, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(pnlFlightInfo4, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(pnlFlightInfo5, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnNextFlights, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnPreviousFlights, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(65, 65, 65))
        );

        jScrollPane1.setViewportView(jPanel1);

        pnlMenu.add(jScrollPane1);
        jScrollPane1.setBounds(0, 78, 1540, 1580);

        btnBackToSearch.setBackground(new java.awt.Color(0, 0, 0));
        btnBackToSearch.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        btnBackToSearch.setForeground(new java.awt.Color(255, 255, 255));
        btnBackToSearch.setText("Back to Search");
        btnBackToSearch.setBorder(javax.swing.BorderFactory.createEtchedBorder(null, java.awt.Color.white));
        btnBackToSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackToSearchActionPerformed(evt);
            }
        });
        pnlMenu.add(btnBackToSearch);
        btnBackToSearch.setBounds(38, 6, 158, 54);

        jButton4.setBackground(new java.awt.Color(153, 153, 0));
        jButton4.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jButton4.setText("Go Sign Up");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        pnlMenu.add(jButton4);
        jButton4.setBounds(1010, 10, 160, 40);

        jButton5.setBackground(new java.awt.Color(153, 153, 0));
        jButton5.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jButton5.setText("Login");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        pnlMenu.add(jButton5);
        jButton5.setBounds(1190, 10, 138, 40);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pnlMenu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(pnlMenu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        LoginLexFlights mainFrame = new LoginLexFlights();

        // Set the visibility of the SearchFlightUI frame
        mainFrame.setVisible(true);

        // Close the current frame (assuming this is in AvailableFlightsSearch)
        this.dispose();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        SignUpForLexFlights mainFrame = new SignUpForLexFlights();

        // Set the visibility of the SearchFlightUI frame
        mainFrame.setVisible(true);

        // Close the current frame (assuming this is in AvailableFlightsSearch)
        this.dispose();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void btnBackToSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackToSearchActionPerformed
        // Create an instance of SearchFlightUI
        SearchFlightUI mainFrame = new SearchFlightUI();

        // Set the visibility of the SearchFlightUI frame
        mainFrame.setVisible(true);

        // Close the current frame (assuming this is in AvailableFlightsSearch)
        this.dispose();
    }//GEN-LAST:event_btnBackToSearchActionPerformed

    private void btnHowToBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHowToBookActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(this, "You must first Sign Up OR Login in order to proceed to Booking. When you View deal you'll carry on to booking");

    }//GEN-LAST:event_btnHowToBookActionPerformed

    private void btnPrice1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrice1ActionPerformed
        if (returnDate != null && !returnDate.isEmpty()) {
            // User wants a return flight, so call the method to display return flights
            displayReturnFlights(5);
        } else {
            // User does not want a return flight, proceed to the payment frame
            FlightDetailsWayToBooking mainFrame = new FlightDetailsWayToBooking();

            // Set the visibility of the SearchFlightUI frame
            mainFrame.setVisible(true);

            // Close the current frame (assuming this is in AvailableFlightsSearch)
            this.dispose();
        }
    }//GEN-LAST:event_btnPrice1ActionPerformed

    private void btnPrice2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrice2ActionPerformed
        if (returnDate != null && !returnDate.isEmpty()) {
            // User wants a return flight, so call the method to display return flights
            displayReturnFlights(5);
        } else {
            // User does not want a return flight, proceed to the payment frame
            FlightDetailsWayToBooking mainFrame = new FlightDetailsWayToBooking();

            // Set the visibility of the SearchFlightUI frame
            mainFrame.setVisible(true);

            // Close the current frame (assuming this is in AvailableFlightsSearch)
            this.dispose();
        }
    }//GEN-LAST:event_btnPrice2ActionPerformed

    private void btnPrice3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrice3ActionPerformed
        if (returnDate != null && !returnDate.isEmpty()) {
            // User wants a return flight, so call the method to display return flights
            displayReturnFlights(5);
        } else {
            // User does not want a return flight, proceed to the payment frame
            FlightDetailsWayToBooking mainFrame = new FlightDetailsWayToBooking();

            // Set the visibility of the SearchFlightUI frame
            mainFrame.setVisible(true);

            // Close the current frame (assuming this is in AvailableFlightsSearch)
            this.dispose();
        }
    }//GEN-LAST:event_btnPrice3ActionPerformed

    private void btnPrice4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrice4ActionPerformed
        if (returnDate != null && !returnDate.isEmpty()) {
            // User wants a return flight, so call the method to display return flights
            displayReturnFlights(5);
        } else {
            // User does not want a return flight, proceed to the payment frame
            FlightDetailsWayToBooking mainFrame = new FlightDetailsWayToBooking();

            // Set the visibility of the SearchFlightUI frame
            mainFrame.setVisible(true);

            // Close the current frame (assuming this is in AvailableFlightsSearch)
            this.dispose();
        }
    }//GEN-LAST:event_btnPrice4ActionPerformed

    private void btnPrice5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrice5ActionPerformed
        if (returnDate != null && !returnDate.isEmpty()) {
            // User wants a return flight, so call the method to display return flights
            displayReturnFlights(5);
        } else {
            // User does not want a return flight, proceed to the payment frame
            FlightDetailsWayToBooking mainFrame = new FlightDetailsWayToBooking();

            // Set the visibility of the SearchFlightUI frame
            mainFrame.setVisible(true);

            // Close the current frame (assuming this is in AvailableFlightsSearch)
            this.dispose();
        }
    }//GEN-LAST:event_btnPrice5ActionPerformed

    private void btnNextFlightsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextFlightsActionPerformed
        int numFlightsToDisplay = 5; // Set the number of flights to display

        // Increment currentPage to navigate to the next page
        currentPage++;

        // Ensure we don't exceed the total number of pages
        if (currentPage >= totalPages) {
            currentPage = totalPages - 1;
        }

        displayNextFlights(numFlightsToDisplay);
    }//GEN-LAST:event_btnNextFlightsActionPerformed

    private void btnPreviousFlightsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPreviousFlightsActionPerformed
        int numFlightsToDisplay = 5; // Set the number of flights to display

        // Decrement currentPage to navigate to the previous page
        currentPage--;

        // Ensure we don't go below the first page
        if (currentPage < 0) {
            currentPage = 0;
        }

        displayNextFlights(numFlightsToDisplay);
    }//GEN-LAST:event_btnPreviousFlightsActionPerformed

    private void displayNextFlights(int numFlightsToDisplay) {
        ProgramManager programManager = new ProgramManager();
        int classCapacity = -1;
        JLabel[] departureIATA = {lblDepartureIATA1, lblDepartureIATA2, lblDepartureIATA3, lblDepartureIATA4, lblDepartureIATA5};
        JLabel[] departureTime = {lblDepartureTime1, lblDepartureTime2, lblDepartureTime3, lblDepartureTime4, lblDepartureTime5};
        JLabel[] arrivalIATA = {lblArrivalIATA1, lblArrivalIATA2, lblArrivalIATA3, lblArrivalIATA4, lblArrivalIATA5};
        JLabel[] arrivalTime = {lblArrivalTime1, lblArrivalTime2, lblArrivalTime3, lblArrivalTime4, lblArrivalTime5};
        JLabel[] aircraftName = {lblAicraftName1, lblAicraftName2, lblAicraftName3, lblAicraftName4, lblAicraftName5};
        JLabel[] arrtravelClass = {lblClass1, lblClass2, lblClass3, lblClass4, lblClass5};
        JLabel[] availableSeats = {lblAvailableSeats1, lblAvailableSeats2, lblAvailableSeats3, lblAvailableSeats4, lblAvailableSeats5};
        JButton[] priceButton = {btnPrice1, btnPrice2, btnPrice3, btnPrice4, btnPrice5};

        // Calculate the total number of pages (each with 5 or less flights
        totalPages = (int) Math.ceil((double) scheduledFlights.size() / numFlightsToDisplay);

        // Adjust currentIndex based on currentPage
        currentIndex = currentPage * numFlightsToDisplay;
        
        numPanelsToShow = 5;

        boolean flightsAvailable = false; // Flag to check if there are available flights

        for (int i = 0; i < numFlightsToDisplay; i++) {
            if (currentIndex < scheduledFlights.size()) {
                JPanel flightPanel = getFlightInfoPanel(i + 1);
                ScheduledFlight flight = scheduledFlights.get(currentIndex);

                // Load flight information using your provided code
                departureIATA[i].setText(programManager.retrieveIATA(departureAirport));
                departureTime[i].setText(flight.getScheduledFlightDepartureTime());
                arrivalIATA[i].setText(programManager.retrieveIATA(arrivalAirport));
                arrivalTime[i].setText(flight.getScheduledFlightArrivalTime());
                Aircraft aircraft = programManager.retrieveAircraftInfo(flight.getAircraftID());
                aircraftName[i].setText(aircraft.getAircraftName());
                arrtravelClass[i].setText(travelClass + " Class");

                float totalFlightPrice;
                // Calculate class capacity and set available seats
                if (travelClass.equals("Economy")) {
                    classCapacity = aircraft.getAircraftEcnmyCapacity() - programManager.countPassengersByScheduledFlightAndClass(flight.getScheduledFlightID(), programManager.retrieveClassID("Economy"));
                    totalFlightPrice = programManager.retrieveClassPrice(programManager.retrieveClassID("Economy")) + flight.getScheduledFlightPrice();
                } else if (travelClass.equals("Business")) {
                    classCapacity = aircraft.getAircraftBsnsCapacity() - programManager.countPassengersByScheduledFlightAndClass(flight.getScheduledFlightID(), programManager.retrieveClassID("Business"));
                    totalFlightPrice = programManager.retrieveClassPrice(programManager.retrieveClassID("Business")) + flight.getScheduledFlightPrice();
                } else {
                    classCapacity = aircraft.getAircraftFstCapacity() - programManager.countPassengersByScheduledFlightAndClass(flight.getScheduledFlightID(), programManager.retrieveClassID("First"));
                    totalFlightPrice = programManager.retrieveClassPrice(programManager.retrieveClassID("First")) + flight.getScheduledFlightPrice();
                }
                totalFlightPrice = totalFlightPrice * numPassengers;

                // Set available seats text color and disable Price button
                if (numPassengers > classCapacity) {
                    availableSeats[i].setForeground(new Color(204, 0, 51));
                    priceButton[i].setEnabled(false);
                } else {
                    availableSeats[i].setForeground(new Color(0, 102, 51));
                    priceButton[i].setEnabled(true);
                }
                availableSeats[i].setText(String.valueOf(classCapacity) + " Seats Remaining");
                priceButton[i].setText("R " + String.valueOf(totalFlightPrice));

                flightPanel.setVisible(true);
                currentIndex++;
                flightsAvailable = true; // Flights are available
            } else {
                // If there are no more flights, hide the panel
                flightInfoPanels[i].setVisible(false);
            }
        }

        // Update button visibility based on currentPage and totalPages
        updateButtonVisibility();

        // Hide any additional flight panels if they exist
        for (int i = numFlightsToDisplay; i < flightInfoPanels.length; i++) {
            flightInfoPanels[i].setVisible(false);
        }

        if (!flightsAvailable) {
            // If there are no available flights, update UI
            btnNextFlights.setVisible(false);
            btnHowToBook.setVisible(false);
            lblAvailableFlightsTxt.setText("No Flights Available for the Specified Departing Date");
        } else if (currentIndex >= scheduledFlights.size()) {
            // If there are no more flights, hide the "Next Flights" button
            // Create a SimpleDateFormat object for the desired format
            SimpleDateFormat outputFormat = new SimpleDateFormat("dd MMMMMMM yyyy");

            // Format the Date object to the desired format
            String outputDateStr = outputFormat.format(depDate);
            lblAvailableFlightsTxt.setText("Available Departing Flights for " + outputDateStr);
            btnNextFlights.setVisible(false);
        }
    }

    private void displayReturnFlights(int numFlightsToDisplay) {
        ProgramManager programManager = new ProgramManager();
        List<ScheduledFlight> returnFlights = programManager.retrieveReturnFlights(arrivalAirport, departureAirport, retDate);

        // Calculate the number of panels to show based on the number of returning flights
        numPanelsToShow = Math.min(numFlightsToDisplay, returnFlights.size());

        JLabel[] departureIATA = {lblDepartureIATA1, lblDepartureIATA2, lblDepartureIATA3, lblDepartureIATA4, lblDepartureIATA5};
        JLabel[] departureTime = {lblDepartureTime1, lblDepartureTime2, lblDepartureTime3, lblDepartureTime4, lblDepartureTime5};
        JLabel[] arrivalIATA = {lblArrivalIATA1, lblArrivalIATA2, lblArrivalIATA3, lblArrivalIATA4, lblArrivalIATA5};
        JLabel[] arrivalTime = {lblArrivalTime1, lblArrivalTime2, lblArrivalTime3, lblArrivalTime4, lblArrivalTime5};
        JLabel[] aircraftName = {lblAicraftName1, lblAicraftName2, lblAicraftName3, lblAicraftName4, lblAicraftName5};
        JLabel[] arrtravelClass = {lblClass1, lblClass2, lblClass3, lblClass4, lblClass5};
        JLabel[] availableSeats = {lblAvailableSeats1, lblAvailableSeats2, lblAvailableSeats3, lblAvailableSeats4, lblAvailableSeats5};
        JButton[] priceButton = {btnPrice1, btnPrice2, btnPrice3, btnPrice4, btnPrice5};

        if (returnFlights.isEmpty()) {
            lblAvailableFlightsTxt.setText("No Flights Available for the Specified Returning Date");
            hideExtraPanels(numFlightsToDisplay);
            return;
        }

        // Clear any previously displayed departing flights
        clearDepartingFlightInfo();

        // Create a SimpleDateFormat object for the desired format
        SimpleDateFormat outputFormat = new SimpleDateFormat("dd MMMMMMM yyyy");

        // Format the Date object to the desired format
        String outputDateStr = outputFormat.format(retDate);
        lblAvailableFlightsTxt.setText("Available Returning Flights for " + outputDateStr);
        for (int i = 0; i < numPanelsToShow && i < returnFlights.size(); i++) {
            JPanel flightPanel = getFlightInfoPanel(i + 1);
            ScheduledFlight returnFlight = returnFlights.get(i);

            departureIATA[i].setText(programManager.retrieveIATA(arrivalAirport));
            departureTime[i].setText(returnFlight.getScheduledFlightDepartureTime());
            arrivalIATA[i].setText(programManager.retrieveIATA(departureAirport));
            arrivalTime[i].setText(returnFlight.getScheduledFlightArrivalTime());
            Aircraft aircraft = programManager.retrieveAircraftInfo(returnFlight.getAircraftID());
            aircraftName[i].setText(aircraft.getAircraftName());
            arrtravelClass[i].setText(travelClass + " Class");

            float totalFlightPrice;
            int classCapacity = -1;

            if (travelClass.equals("Economy")) {
                classCapacity = aircraft.getAircraftEcnmyCapacity() - programManager.countPassengersByScheduledFlightAndClass(returnFlight.getScheduledFlightID(), programManager.retrieveClassID("Economy"));
                totalFlightPrice = programManager.retrieveClassPrice(programManager.retrieveClassID("Economy")) + returnFlight.getScheduledFlightPrice();
            } else if (travelClass.equals("Business")) {
                classCapacity = aircraft.getAircraftBsnsCapacity() - programManager.countPassengersByScheduledFlightAndClass(returnFlight.getScheduledFlightID(), programManager.retrieveClassID("Business"));
                totalFlightPrice = programManager.retrieveClassPrice(programManager.retrieveClassID("Business")) + returnFlight.getScheduledFlightPrice();
            } else {
                classCapacity = aircraft.getAircraftFstCapacity() - programManager.countPassengersByScheduledFlightAndClass(returnFlight.getScheduledFlightID(), programManager.retrieveClassID("First"));
                totalFlightPrice = programManager.retrieveClassPrice(programManager.retrieveClassID("First")) + returnFlight.getScheduledFlightPrice();
            }
            totalFlightPrice = totalFlightPrice * numPassengers;

            if (numPassengers > classCapacity) {
                availableSeats[i].setForeground(new Color(204, 0, 51));
                priceButton[i].setEnabled(false);
            } else {
                availableSeats[i].setForeground(new Color(0, 102, 51));
                priceButton[i].setEnabled(true);
            }
            availableSeats[i].setText(String.valueOf(classCapacity) + " Seats Remaining");
            priceButton[i].setText("R " + String.valueOf(totalFlightPrice));

            flightPanel.setVisible(true);
        }

        // Hide any extra panels that are not needed
        hideExtraPanels(Math.abs(numFlightsToDisplay - numPanelsToShow));

        updateButtonVisibility();
    }

// Repeat the above block for btnPrice2, btnPrice3, btnPrice4, btnPrice5
    private JPanel getFlightInfoPanel(int index) {
        if (index >= 1 && index <= numPanelsToShow) {
            return flightInfoPanels[index - 1];
        } else {
            return null;
        }
    }

    private void updateButtonVisibility() {
        btnPreviousFlights.setVisible(currentPage > 0);
        btnNextFlights.setVisible(currentPage < totalPages - 1);
    }

    // Clear departing flight information
    private void clearDepartingFlightInfo() {
        JLabel[] departureIATA = {lblDepartureIATA1, lblDepartureIATA2, lblDepartureIATA3, lblDepartureIATA4, lblDepartureIATA5};
        JLabel[] departureTime = {lblDepartureTime1, lblDepartureTime2, lblDepartureTime3, lblDepartureTime4, lblDepartureTime5};
        JLabel[] arrivalIATA = {lblArrivalIATA1, lblArrivalIATA2, lblArrivalIATA3, lblArrivalIATA4, lblArrivalIATA5};
        JLabel[] arrivalTime = {lblArrivalTime1, lblArrivalTime2, lblArrivalTime3, lblArrivalTime4, lblArrivalTime5};
        JLabel[] aircraftName = {lblAicraftName1, lblAicraftName2, lblAicraftName3, lblAicraftName4, lblAicraftName5};
        JLabel[] arrtravelClass = {lblClass1, lblClass2, lblClass3, lblClass4, lblClass5};
        JLabel[] availableSeats = {lblAvailableSeats1, lblAvailableSeats2, lblAvailableSeats3, lblAvailableSeats4, lblAvailableSeats5};
        JButton[] priceButton = {btnPrice1, btnPrice2, btnPrice3, btnPrice4, btnPrice5};

        for (int i = 0; i < departureIATA.length; i++) {
            departureIATA[i].setText("");
            departureTime[i].setText("");
            arrivalIATA[i].setText("");
            arrivalTime[i].setText("");
            aircraftName[i].setText("");
            arrtravelClass[i].setText("");
            availableSeats[i].setText("");
            priceButton[i].setText("");
        }
    }

    // Hide extra panels
    private void hideExtraPanels(int numPanelsToHide) {
        for (int i = numPanelsToHide; i < flightInfoPanels.length; i++) {
            flightInfoPanels[i].setVisible(false);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AvailableFlightsSearch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AvailableFlightsSearch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AvailableFlightsSearch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AvailableFlightsSearch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AvailableFlightsSearch().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBackToSearch;
    private javax.swing.JButton btnHowToBook;
    private javax.swing.JButton btnNextFlights;
    private javax.swing.JButton btnPreviousFlights;
    private javax.swing.JButton btnPrice1;
    private javax.swing.JButton btnPrice2;
    private javax.swing.JButton btnPrice3;
    private javax.swing.JButton btnPrice4;
    private javax.swing.JButton btnPrice5;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSprtr1;
    private javax.swing.JSeparator jSprtr2;
    private javax.swing.JSeparator jSprtr3;
    private javax.swing.JSeparator jSprtr4;
    private javax.swing.JSeparator jSprtr5;
    private javax.swing.JLabel lblAicraftName1;
    private javax.swing.JLabel lblAicraftName2;
    private javax.swing.JLabel lblAicraftName3;
    private javax.swing.JLabel lblAicraftName4;
    private javax.swing.JLabel lblAicraftName5;
    private javax.swing.JLabel lblArrivalIATA1;
    private javax.swing.JLabel lblArrivalIATA2;
    private javax.swing.JLabel lblArrivalIATA3;
    private javax.swing.JLabel lblArrivalIATA4;
    private javax.swing.JLabel lblArrivalIATA5;
    private javax.swing.JLabel lblArrivalTime1;
    private javax.swing.JLabel lblArrivalTime2;
    private javax.swing.JLabel lblArrivalTime3;
    private javax.swing.JLabel lblArrivalTime4;
    private javax.swing.JLabel lblArrivalTime5;
    private javax.swing.JLabel lblArrow1;
    private javax.swing.JLabel lblArrow2;
    private javax.swing.JLabel lblArrow3;
    private javax.swing.JLabel lblArrow4;
    private javax.swing.JLabel lblArrow5;
    private javax.swing.JLabel lblAvailableFlightsTxt;
    private javax.swing.JLabel lblAvailableSeats1;
    private javax.swing.JLabel lblAvailableSeats2;
    private javax.swing.JLabel lblAvailableSeats3;
    private javax.swing.JLabel lblAvailableSeats4;
    private javax.swing.JLabel lblAvailableSeats5;
    private javax.swing.JLabel lblClass1;
    private javax.swing.JLabel lblClass2;
    private javax.swing.JLabel lblClass3;
    private javax.swing.JLabel lblClass4;
    private javax.swing.JLabel lblClass5;
    private javax.swing.JLabel lblDepartureIATA1;
    private javax.swing.JLabel lblDepartureIATA2;
    private javax.swing.JLabel lblDepartureIATA3;
    private javax.swing.JLabel lblDepartureIATA4;
    private javax.swing.JLabel lblDepartureIATA5;
    private javax.swing.JLabel lblDepartureTime1;
    private javax.swing.JLabel lblDepartureTime2;
    private javax.swing.JLabel lblDepartureTime3;
    private javax.swing.JLabel lblDepartureTime4;
    private javax.swing.JLabel lblDepartureTime5;
    private com.toedter.calendar.MinMaxDateEvaluator minMaxDateEvaluator1;
    private javax.swing.JPanel pnlAvailableFlightsTxt;
    private javax.swing.JPanel pnlFlightInfo1;
    private javax.swing.JPanel pnlFlightInfo2;
    private javax.swing.JPanel pnlFlightInfo3;
    private javax.swing.JPanel pnlFlightInfo4;
    private javax.swing.JPanel pnlFlightInfo5;
    private javax.swing.JPanel pnlMenu;
    // End of variables declaration//GEN-END:variables

}
