/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package travelcentralflightmanagementsystem;

import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author the_scs
 */
public class HotelSearchUI extends javax.swing.JFrame {

    //Declare variables
    private boolean meals = false;
    private String checkInDate;
    private String checkOutDate;
    private SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
    private String departureAirport;
    private String arrivalAirport;
    private String departureDate;
    private String returnDate;
    private int numPassengers;
    private String travelClass;
    private boolean oneWay;
    private Date depDate;
    private Date retDate;
    private float departureFlightPrice;
    private float returnFlightPrice;
    private String[] passengerFirstName;
    private String[] passengerLastName;
    private int[] passengerAge;
    private String departureTime;
    private String arrivalTime;
    private String rDepartureTime;
    private String rArrivalTime;
    private int depFlightID;
    private int retFlightID = 0;
    private ProgramManager programManager;

    public HotelSearchUI() {
        
        initComponents();
        
        if (!SessionManager.isLoggedIn()) {
            lblName.setVisible(false);
            btnLogOut.setVisible(false);
        } else {
            lblName.setText(SessionManager.getLoggedInUsername());
        }
    }
    
    public HotelSearchUI(String departureAirport, String arrivalAirport, String departureDate, String returnDate, int numPassengers, String travelClass, boolean oneWay, float departureFlightPrice, float returnFlightPrice, String departureTime, String arrivalTime, String rDepartureTime, String rArrivalTime, int depFlightID, int retFlightID) {
        
        this.departureAirport = departureAirport;
        this.arrivalAirport = arrivalAirport;
        this.departureDate = departureDate;
        this.returnDate = returnDate;
        this.numPassengers = numPassengers;
        this.travelClass = travelClass;
        this.oneWay = oneWay;
        this.departureFlightPrice = departureFlightPrice;
        this.returnFlightPrice = returnFlightPrice;
        this.departureTime = departureTime;
        this.arrivalTime = arrivalTime;
        this.rDepartureTime = rDepartureTime;
        this.rArrivalTime = rArrivalTime;
        this.depFlightID = depFlightID;
        this.retFlightID = retFlightID;
        
        try {
            // Parse the String and convert it to a Date for departureDate
            depDate = dateFormat.parse(departureDate);

            if (returnDate != null) {
                // Parse the String and convert it to a Date for returnDate
                retDate = dateFormat.parse(returnDate);
            }
        } catch (ParseException e) {
            e.printStackTrace();
        }
        
        initComponents();

        
        if (!SessionManager.isLoggedIn()) {
            lblName.setVisible(false);
            btnLogOut.setVisible(false);
        } else {
            lblName.setText(SessionManager.getLoggedInUsername());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlMain = new javax.swing.JPanel();
        lblCheckin = new javax.swing.JLabel();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        lblCheckout = new javax.swing.JLabel();
        jDateChooser2 = new com.toedter.calendar.JDateChooser();
        chkboxMeals = new javax.swing.JCheckBox();
        btnReserve = new javax.swing.JButton();
        pnlHead = new javax.swing.JPanel();
        btnLogOut = new javax.swing.JButton();
        lblTravel = new javax.swing.JLabel();
        lblCentral = new javax.swing.JLabel();
        lblName = new javax.swing.JLabel();
        lblTitle = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        setPreferredSize(new java.awt.Dimension(1539, 800));
        getContentPane().setLayout(null);

        pnlMain.setBackground(new java.awt.Color(255, 255, 255));
        pnlMain.setPreferredSize(new java.awt.Dimension(1539, 800));
        pnlMain.setLayout(null);

        lblCheckin.setText("Check-in Date");
        pnlMain.add(lblCheckin);
        lblCheckin.setBounds(480, 300, 75, 16);

        jDateChooser1.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jDateChooser1PropertyChange(evt);
            }
        });
        pnlMain.add(jDateChooser1);
        jDateChooser1.setBounds(480, 320, 250, 40);

        lblCheckout.setText("Check-out Date");
        pnlMain.add(lblCheckout);
        lblCheckout.setBounds(840, 300, 83, 16);

        jDateChooser2.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jDateChooser2PropertyChange(evt);
            }
        });
        pnlMain.add(jDateChooser2);
        jDateChooser2.setBounds(840, 320, 250, 40);

        chkboxMeals.setText("Would you like us to prepare meals for you during you stay?");
        chkboxMeals.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkboxMealsActionPerformed(evt);
            }
        });
        pnlMain.add(chkboxMeals);
        chkboxMeals.setBounds(480, 400, 339, 20);

        btnReserve.setBackground(new java.awt.Color(0, 0, 0));
        btnReserve.setForeground(new java.awt.Color(255, 255, 255));
        btnReserve.setText("Reserve");
        btnReserve.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReserveActionPerformed(evt);
            }
        });
        pnlMain.add(btnReserve);
        btnReserve.setBounds(1040, 470, 100, 40);

        pnlHead.setBackground(new java.awt.Color(0, 0, 0));
        pnlHead.setPreferredSize(new java.awt.Dimension(1536, 100));
        pnlHead.setLayout(null);

        btnLogOut.setBackground(new java.awt.Color(0, 0, 0));
        btnLogOut.setForeground(new java.awt.Color(255, 255, 255));
        btnLogOut.setText("Log Out");
        btnLogOut.setBorder(null);
        btnLogOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogOutActionPerformed(evt);
            }
        });
        pnlHead.add(btnLogOut);
        btnLogOut.setBounds(1430, 30, 80, 30);

        lblTravel.setFont(new java.awt.Font("Perpetua Titling MT", 0, 12)); // NOI18N
        lblTravel.setForeground(new java.awt.Color(255, 255, 255));
        lblTravel.setText("T R A V E L");
        pnlHead.add(lblTravel);
        lblTravel.setBounds(60, 30, 70, 16);

        lblCentral.setFont(new java.awt.Font("Perpetua Titling MT", 0, 12)); // NOI18N
        lblCentral.setForeground(new java.awt.Color(255, 255, 255));
        lblCentral.setText("C E N T R A L");
        pnlHead.add(lblCentral);
        lblCentral.setBounds(60, 50, 90, 15);

        lblName.setForeground(new java.awt.Color(255, 255, 255));
        lblName.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblName.setText("Full Name");
        pnlHead.add(lblName);
        lblName.setBounds(0, 40, 1540, 16);

        pnlMain.add(pnlHead);
        pnlHead.setBounds(0, 0, 1540, 80);

        lblTitle.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle.setText("Hotel Search");
        pnlMain.add(lblTitle);
        lblTitle.setBounds(10, 220, 1540, 50);

        getContentPane().add(pnlMain);
        pnlMain.setBounds(0, 0, 1539, 800);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnLogOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogOutActionPerformed
        LogOutUI logOut = new LogOutUI();

        logOut.setVisible(true);

        this.dispose();
    }//GEN-LAST:event_btnLogOutActionPerformed

    private void btnReserveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReserveActionPerformed
        try {
            checkInDate = dateFormat.format(jDateChooser1.getDate());
            checkOutDate = dateFormat.format(jDateChooser2.getDate());
            System.out.println(arrivalAirport);
            HotelListingUI hotelListing = new HotelListingUI(departureAirport, arrivalAirport, departureDate, returnDate, numPassengers, travelClass, oneWay, departureFlightPrice, returnFlightPrice, departureTime, arrivalTime, rDepartureTime, rArrivalTime, depFlightID, retFlightID, checkInDate, checkOutDate, meals);
            hotelListing.setVisible(true);
            this.dispose();
        } catch (SQLException ex) {
            Logger.getLogger(HotelSearchUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_btnReserveActionPerformed

    private void jDateChooser1PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jDateChooser1PropertyChange
        if ("date".equals(evt.getPropertyName())) {
            // Get the selected date from the date chooser
            Date selectedDate = (Date) evt.getNewValue();

            String departureDate = dateFormat.format(jDateChooser1.getDate());
            System.out.println(" " + departureDate);
            // Check if the selected departure date is null
            if (selectedDate == null) {
                // If check in date is null, disable the dtchooserCheckOut
                jDateChooser2.setEnabled(false);
            } else {
                // If departure date is not null, enable the dtchooserCheckOut
                jDateChooser2.setEnabled(true);
            }

            if (selectedDate != null) {
                

                // Check if the selected date is within the allowed range
                if (selectedDate.before(depDate)) {
                    // If the selected date is before depDate, reset the date chooser
                    jDateChooser1.setDate(null);
                }
            }
        }
    }//GEN-LAST:event_jDateChooser1PropertyChange

    private void jDateChooser2PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jDateChooser2PropertyChange
        if ("date".equals(evt.getPropertyName())) {
            // Get the selected date from the dtchooserCheckOut
            Date selectedDateCheckOut = (Date) evt.getNewValue();

            // Get the selected date from the dtchooserCheckIn
            Date selectedDateCheckIn = jDateChooser2.getDate();

            // Create a calendar instance and set it to the departure date
            Calendar departureCalendar = Calendar.getInstance();
            departureCalendar.setTime(selectedDateCheckIn);

            // Add 6 months to the departure date
            departureCalendar.add(Calendar.MONTH, 6);
            Date sixMonthsFromDeparture = departureCalendar.getTime();

            // Check if the selected return date is within the allowed range
            if (selectedDateCheckOut.before(selectedDateCheckIn)
                    || selectedDateCheckOut.after(sixMonthsFromDeparture)) {
                // If the selected date is outside the allowed range, reset the check out date chooser
                jDateChooser2.setDate(null);
            }

        }
    }//GEN-LAST:event_jDateChooser2PropertyChange

    private void chkboxMealsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkboxMealsActionPerformed
        // Check if the checkbox is selected
        if (chkboxMeals.isSelected()) {
            // Set the meals variable to true
            meals = true;
        } else {
            // Set the meals variable to false
            meals = false;
        }
    }//GEN-LAST:event_chkboxMealsActionPerformed

    /**
         * @param args the command line arguments
         */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(HotelSearchUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(HotelSearchUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(HotelSearchUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HotelSearchUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new HotelSearchUI().setVisible(true);
            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnLogOut;
    private javax.swing.JButton btnReserve;
    private javax.swing.JCheckBox chkboxMeals;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private com.toedter.calendar.JDateChooser jDateChooser2;
    private javax.swing.JLabel lblCentral;
    private javax.swing.JLabel lblCheckin;
    private javax.swing.JLabel lblCheckout;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JLabel lblTravel;
    private javax.swing.JPanel pnlHead;
    private javax.swing.JPanel pnlMain;
    // End of variables declaration//GEN-END:variables
}
