/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package travelcentralflightmanagementsystem;

import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.UUID;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JSpinner;
import javax.swing.JTextField;
import javax.swing.SpinnerNumberModel;

/**
 *
 * @author the_scs
 */
public class FlightBookingUI extends javax.swing.JFrame {

    private String departureAirport;
    private String arrivalAirport;
    private String departureDate;
    private String returnDate;
    private int numPassengers;
    private String travelClass;
    private boolean oneWay;
    private Date depDate;
    private Date retDate;
    private float departureFlightPrice;
    private float returnFlightPrice;
    private String[] passengerFirstName;
    private String[] passengerLastName;
    private int[] passengerAge;
    private String departureTime;
    private String arrivalTime;
    private String rDepartureTime;
    private String rArrivalTime;
    private int depFlightID;
    private int retFlightID=0;
    ProgramManager programManager;

    public FlightBookingUI() {

        initComponents();
    }

    public FlightBookingUI(String departureAirport, String arrivalAirport, String departureDate, String returnDate, int numPassengers, String travelClass, boolean oneWay, float departureFlightPrice, float returnFlightPrice, String departureTime, String arrivalTime, String rDepartureTime, String rArrivalTime, int depFlightID, int retFlightID) {
        this.departureAirport = departureAirport;
        this.arrivalAirport = arrivalAirport;
        this.departureDate = departureDate;
        this.returnDate = returnDate;
        this.numPassengers = numPassengers;
        this.travelClass = travelClass;
        this.oneWay = oneWay;
        this.departureFlightPrice = departureFlightPrice;
        this.returnFlightPrice = returnFlightPrice;
        this.departureTime = departureTime;
        this.arrivalTime = arrivalTime;
        this.rDepartureTime = rDepartureTime;
        this.rArrivalTime = rArrivalTime;
        this.depFlightID = depFlightID;
        this.retFlightID = retFlightID;

        initComponents();

        populateFlightDetails();

        lblPaymentDetails.setVisible(false);
        lblPaymentMethod.setVisible(false);
        rbtnVisa.setVisible(false);
        rbtnMasterCard.setVisible(false);
        pnlPaymentDetails.setVisible(false);

        rbtngrpPaymentMethod.add(rbtnMasterCard);
        rbtngrpPaymentMethod.add(rbtnVisa);
        btnPay.setEnabled(false);
        
        programManager = new ProgramManager();
        
        if (!SessionManager.isLoggedIn()) {
            lblName.setVisible(false);
            btnLogOut.setVisible(false);
        } else {
            lblName.setText(SessionManager.getLoggedInUsername());
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        rbtngrpPaymentMethod = new javax.swing.ButtonGroup();
        pnlMain = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        pnlDetails = new javax.swing.JPanel();
        lblFlightDetails = new javax.swing.JLabel();
        lblPaymentDetails = new javax.swing.JLabel();
        pnlPaymentDetails = new javax.swing.JPanel();
        jLabel20 = new javax.swing.JLabel();
        lblCardDetails = new javax.swing.JLabel();
        lblBillingAddressLine = new javax.swing.JLabel();
        lblCardNumber = new javax.swing.JLabel();
        lblExpirationDate = new javax.swing.JLabel();
        lblCVC = new javax.swing.JLabel();
        lblCardOwner = new javax.swing.JLabel();
        txtfieldCardNumber = new javax.swing.JTextField();
        txtfieldCVC = new javax.swing.JTextField();
        txtfieldCardOwner = new javax.swing.JTextField();
        lblBillingAddress = new javax.swing.JLabel();
        lblCountry = new javax.swing.JLabel();
        lblPostalCode = new javax.swing.JLabel();
        lblStreetName = new javax.swing.JLabel();
        lblTown = new javax.swing.JLabel();
        lblResidenceNumber = new javax.swing.JLabel();
        txtfieldCountry = new javax.swing.JTextField();
        txtfieldPostalCode = new javax.swing.JTextField();
        txtfieldStreetName = new javax.swing.JTextField();
        txtfieldTown = new javax.swing.JTextField();
        txtfieldResidenceBumber = new javax.swing.JTextField();
        chkboxTsnCs = new javax.swing.JCheckBox();
        btnPay = new javax.swing.JButton();
        lblCardDetailsLine = new javax.swing.JLabel();
        jMonthChooser1 = new com.toedter.calendar.JMonthChooser();
        jYearChooser1 = new com.toedter.calendar.JYearChooser();
        chkboxUserTraveling = new javax.swing.JCheckBox();
        pnlOneWayFlight = new javax.swing.JPanel();
        lblDepartureFlight = new javax.swing.JLabel();
        lblDeparture = new javax.swing.JLabel();
        lblArrival = new javax.swing.JLabel();
        lblDepartureAirport = new javax.swing.JLabel();
        lblDepartureTime = new javax.swing.JLabel();
        lblArrivalAirport = new javax.swing.JLabel();
        lblArrivalTime = new javax.swing.JLabel();
        lblDepartureFlightTotal = new javax.swing.JLabel();
        lblDepartureFlightR = new javax.swing.JLabel();
        lblNumPassengers = new javax.swing.JLabel();
        lblClass = new javax.swing.JLabel();
        rbtnVisa = new javax.swing.JRadioButton();
        rbtnMasterCard = new javax.swing.JRadioButton();
        lblPaymentMethod = new javax.swing.JLabel();
        pnlReturningFlight = new javax.swing.JPanel();
        lblReturnFlight = new javax.swing.JLabel();
        lblRDeparture = new javax.swing.JLabel();
        lblRArrival = new javax.swing.JLabel();
        lblRDepartureAirport = new javax.swing.JLabel();
        lblRDepartureTime = new javax.swing.JLabel();
        lblRArrivalAirport = new javax.swing.JLabel();
        lblRArrivalTime = new javax.swing.JLabel();
        lblReturnFlightR1 = new javax.swing.JLabel();
        lblReturnFlightTotal1 = new javax.swing.JLabel();
        lblNumPassengers1 = new javax.swing.JLabel();
        lblClass1 = new javax.swing.JLabel();
        pnlTotal = new javax.swing.JPanel();
        lblTotalDue = new javax.swing.JLabel();
        lblTotal = new javax.swing.JLabel();
        btnProceedToPayment = new javax.swing.JButton();
        btnHotel = new javax.swing.JButton();
        lblOr1 = new javax.swing.JLabel();
        lblInstruction = new javax.swing.JLabel();
        btnBackToSearch = new javax.swing.JButton();
        btnLogOut = new javax.swing.JButton();
        lblName = new javax.swing.JLabel();
        lblTravel = new javax.swing.JLabel();
        lblCentral = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(1539, 1539));

        pnlMain.setBackground(new java.awt.Color(0, 0, 0));
        pnlMain.setLayout(null);

        pnlDetails.setBackground(new java.awt.Color(255, 255, 255));
        pnlDetails.setForeground(new java.awt.Color(255, 255, 255));
        pnlDetails.setPreferredSize(new java.awt.Dimension(1499901, 1599964));
        pnlDetails.setLayout(null);

        lblFlightDetails.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        lblFlightDetails.setText("Flight Details");
        pnlDetails.add(lblFlightDetails);
        lblFlightDetails.setBounds(190, 30, 212, 48);

        lblPaymentDetails.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        lblPaymentDetails.setText("Payment Details");
        pnlDetails.add(lblPaymentDetails);
        lblPaymentDetails.setBounds(190, 490, 290, 50);

        pnlPaymentDetails.setBackground(new java.awt.Color(255, 255, 255));
        pnlPaymentDetails.setMaximumSize(new java.awt.Dimension(32767, 32769));
        pnlPaymentDetails.setPreferredSize(new java.awt.Dimension(930, 7910));
        pnlPaymentDetails.setLayout(null);
        pnlPaymentDetails.add(jLabel20);
        jLabel20.setBounds(705, 12, 0, 93);

        lblCardDetails.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        lblCardDetails.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblCardDetails.setText("Card Details:");
        pnlPaymentDetails.add(lblCardDetails);
        lblCardDetails.setBounds(0, 30, 950, 38);

        lblBillingAddressLine.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        lblBillingAddressLine.setText("------------------------------------------------------------------------------------------------");
        pnlPaymentDetails.add(lblBillingAddressLine);
        lblBillingAddressLine.setBounds(7, 330, 940, 11);

        lblCardNumber.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblCardNumber.setText("Card Number: *");
        pnlPaymentDetails.add(lblCardNumber);
        lblCardNumber.setBounds(290, 110, 140, 28);

        lblExpirationDate.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblExpirationDate.setText("Expiration Date: *");
        pnlPaymentDetails.add(lblExpirationDate);
        lblExpirationDate.setBounds(290, 150, 150, 28);

        lblCVC.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblCVC.setText("CVC: *");
        pnlPaymentDetails.add(lblCVC);
        lblCVC.setBounds(290, 190, 60, 28);

        lblCardOwner.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblCardOwner.setText("Card Owner's Name: *");
        pnlPaymentDetails.add(lblCardOwner);
        lblCardOwner.setBounds(290, 230, 190, 28);

        txtfieldCardNumber.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        pnlPaymentDetails.add(txtfieldCardNumber);
        txtfieldCardNumber.setBounds(520, 110, 301, 26);

        txtfieldCVC.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        pnlPaymentDetails.add(txtfieldCVC);
        txtfieldCVC.setBounds(520, 190, 301, 26);

        txtfieldCardOwner.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        pnlPaymentDetails.add(txtfieldCardOwner);
        txtfieldCardOwner.setBounds(520, 230, 301, 26);

        lblBillingAddress.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        lblBillingAddress.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblBillingAddress.setText("Billing Address (Card Owner):");
        pnlPaymentDetails.add(lblBillingAddress);
        lblBillingAddress.setBounds(0, 290, 950, 33);

        lblCountry.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblCountry.setText("Country: *");
        pnlPaymentDetails.add(lblCountry);
        lblCountry.setBounds(290, 480, 90, 28);

        lblPostalCode.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblPostalCode.setText("Postal Code: *");
        pnlPaymentDetails.add(lblPostalCode);
        lblPostalCode.setBounds(290, 520, 120, 28);

        lblStreetName.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblStreetName.setText("Street: *");
        pnlPaymentDetails.add(lblStreetName);
        lblStreetName.setBounds(290, 400, 70, 28);

        lblTown.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblTown.setText("Town: *");
        pnlPaymentDetails.add(lblTown);
        lblTown.setBounds(290, 440, 70, 28);

        lblResidenceNumber.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblResidenceNumber.setText("Residence Number: *");
        pnlPaymentDetails.add(lblResidenceNumber);
        lblResidenceNumber.setBounds(290, 360, 180, 28);

        txtfieldCountry.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        pnlPaymentDetails.add(txtfieldCountry);
        txtfieldCountry.setBounds(530, 480, 301, 26);

        txtfieldPostalCode.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        pnlPaymentDetails.add(txtfieldPostalCode);
        txtfieldPostalCode.setBounds(530, 520, 301, 26);

        txtfieldStreetName.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        pnlPaymentDetails.add(txtfieldStreetName);
        txtfieldStreetName.setBounds(530, 400, 301, 26);

        txtfieldTown.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        pnlPaymentDetails.add(txtfieldTown);
        txtfieldTown.setBounds(530, 440, 301, 26);

        txtfieldResidenceBumber.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        pnlPaymentDetails.add(txtfieldResidenceBumber);
        txtfieldResidenceBumber.setBounds(530, 360, 301, 26);

        chkboxTsnCs.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        chkboxTsnCs.setText("I have read and accept: Conditions of Carriage Booking Conditions (including cancellation and refund policy) Terms and Conditions.");
        chkboxTsnCs.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        chkboxTsnCs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkboxTsnCsActionPerformed(evt);
            }
        });
        pnlPaymentDetails.add(chkboxTsnCs);
        chkboxTsnCs.setBounds(10, 570, 918, 24);

        btnPay.setBackground(new java.awt.Color(0, 0, 0));
        btnPay.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        btnPay.setForeground(new java.awt.Color(255, 255, 255));
        btnPay.setText("Book and Pay Flight");
        btnPay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPayActionPerformed(evt);
            }
        });
        pnlPaymentDetails.add(btnPay);
        btnPay.setBounds(690, 600, 242, 39);

        lblCardDetailsLine.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        lblCardDetailsLine.setText("------------------------------------------------------------------------------------------------");
        pnlPaymentDetails.add(lblCardDetailsLine);
        lblCardDetailsLine.setBounds(7, 70, 940, 11);

        jMonthChooser1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        pnlPaymentDetails.add(jMonthChooser1);
        jMonthChooser1.setBounds(520, 150, 130, 22);
        pnlPaymentDetails.add(jYearChooser1);
        jYearChooser1.setBounds(650, 150, 64, 22);

        pnlDetails.add(pnlPaymentDetails);
        pnlPaymentDetails.setBounds(270, 650, 950, 670);

        chkboxUserTraveling.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        chkboxUserTraveling.setText("Are you among the traveling passengers?");
        chkboxUserTraveling.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkboxUserTravelingActionPerformed(evt);
            }
        });
        pnlDetails.add(chkboxUserTraveling);
        chkboxUserTraveling.setBounds(610, 400, 290, 24);

        pnlOneWayFlight.setBackground(new java.awt.Color(255, 255, 255));
        pnlOneWayFlight.setBorder(javax.swing.BorderFactory.createEtchedBorder(null, java.awt.Color.black));
        pnlOneWayFlight.setLayout(null);

        lblDepartureFlight.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        lblDepartureFlight.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblDepartureFlight.setText("Departure Flight Details");
        pnlOneWayFlight.add(lblDepartureFlight);
        lblDepartureFlight.setBounds(8, 54, 544, 40);

        lblDeparture.setText("Departure");
        pnlOneWayFlight.add(lblDeparture);
        lblDeparture.setBounds(8, 107, 65, 16);

        lblArrival.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblArrival.setText("Arrival");
        pnlOneWayFlight.add(lblArrival);
        lblArrival.setBounds(492, 107, 60, 16);

        lblDepartureAirport.setText("Departure Airport (IATA Code)");
        pnlOneWayFlight.add(lblDepartureAirport);
        lblDepartureAirport.setBounds(8, 129, 272, 16);

        lblDepartureTime.setText("--:--");
        pnlOneWayFlight.add(lblDepartureTime);
        lblDepartureTime.setBounds(8, 151, 63, 16);

        lblArrivalAirport.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblArrivalAirport.setText("Arrival Airport (IATA Code)");
        pnlOneWayFlight.add(lblArrivalAirport);
        lblArrivalAirport.setBounds(286, 129, 266, 16);

        lblArrivalTime.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblArrivalTime.setText("--:--");
        pnlOneWayFlight.add(lblArrivalTime);
        lblArrivalTime.setBounds(498, 151, 54, 16);

        lblDepartureFlightTotal.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblDepartureFlightTotal.setText("0000.00");
        pnlOneWayFlight.add(lblDepartureFlightTotal);
        lblDepartureFlightTotal.setBounds(490, 230, 60, 16);

        lblDepartureFlightR.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblDepartureFlightR.setText("R");
        pnlOneWayFlight.add(lblDepartureFlightR);
        lblDepartureFlightR.setBounds(440, 230, 37, 16);

        lblNumPassengers.setText("0 Passenger(s)");
        pnlOneWayFlight.add(lblNumPassengers);
        lblNumPassengers.setBounds(20, 230, 110, 16);

        lblClass.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblClass.setText("Travel Class");
        pnlOneWayFlight.add(lblClass);
        lblClass.setBounds(240, 230, 90, 20);

        pnlDetails.add(pnlOneWayFlight);
        pnlOneWayFlight.setBounds(190, 80, 560, 254);

        rbtnVisa.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        rbtnVisa.setText("VISA");
        rbtnVisa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtnVisaActionPerformed(evt);
            }
        });
        pnlDetails.add(rbtnVisa);
        rbtnVisa.setBounds(270, 620, 70, 25);

        rbtnMasterCard.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        rbtnMasterCard.setText("MasterCard");
        rbtnMasterCard.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtnMasterCardActionPerformed(evt);
            }
        });
        pnlDetails.add(rbtnMasterCard);
        rbtnMasterCard.setBounds(430, 620, 110, 25);

        lblPaymentMethod.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblPaymentMethod.setText("Choose your payment method");
        pnlDetails.add(lblPaymentMethod);
        lblPaymentMethod.setBounds(190, 540, 260, 25);

        pnlReturningFlight.setBackground(new java.awt.Color(255, 255, 255));
        pnlReturningFlight.setBorder(javax.swing.BorderFactory.createEtchedBorder(null, java.awt.Color.black));
        pnlReturningFlight.setPreferredSize(new java.awt.Dimension(560, 254));
        pnlReturningFlight.setLayout(null);

        lblReturnFlight.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        lblReturnFlight.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblReturnFlight.setText("Return Flight Details");
        pnlReturningFlight.add(lblReturnFlight);
        lblReturnFlight.setBounds(10, 55, 544, 30);

        lblRDeparture.setText("Departure");
        pnlReturningFlight.add(lblRDeparture);
        lblRDeparture.setBounds(10, 110, 65, 16);

        lblRArrival.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblRArrival.setText("Arrival");
        pnlReturningFlight.add(lblRArrival);
        lblRArrival.setBounds(490, 110, 60, 16);

        lblRDepartureAirport.setText("Departure Airport (IATA Code)");
        pnlReturningFlight.add(lblRDepartureAirport);
        lblRDepartureAirport.setBounds(10, 130, 272, 16);

        lblRDepartureTime.setText("--:--");
        pnlReturningFlight.add(lblRDepartureTime);
        lblRDepartureTime.setBounds(10, 150, 63, 16);

        lblRArrivalAirport.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblRArrivalAirport.setText("Arrival Airport (IATA Code)");
        pnlReturningFlight.add(lblRArrivalAirport);
        lblRArrivalAirport.setBounds(290, 130, 266, 16);

        lblRArrivalTime.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblRArrivalTime.setText("--:--");
        pnlReturningFlight.add(lblRArrivalTime);
        lblRArrivalTime.setBounds(500, 150, 54, 16);

        lblReturnFlightR1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblReturnFlightR1.setText("R");
        pnlReturningFlight.add(lblReturnFlightR1);
        lblReturnFlightR1.setBounds(440, 230, 37, 16);

        lblReturnFlightTotal1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblReturnFlightTotal1.setText("0000.00");
        pnlReturningFlight.add(lblReturnFlightTotal1);
        lblReturnFlightTotal1.setBounds(490, 230, 60, 16);

        lblNumPassengers1.setText("0 Passenger(s)");
        pnlReturningFlight.add(lblNumPassengers1);
        lblNumPassengers1.setBounds(20, 230, 110, 16);

        lblClass1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblClass1.setText("Travel Class");
        pnlReturningFlight.add(lblClass1);
        lblClass1.setBounds(240, 230, 90, 20);

        pnlDetails.add(pnlReturningFlight);
        pnlReturningFlight.setBounds(760, 80, 560, 254);

        pnlTotal.setBackground(new java.awt.Color(255, 255, 255));

        lblTotalDue.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblTotalDue.setText("Total Due: R");

        lblTotal.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblTotal.setText("0000.00");

        javax.swing.GroupLayout pnlTotalLayout = new javax.swing.GroupLayout(pnlTotal);
        pnlTotal.setLayout(pnlTotalLayout);
        pnlTotalLayout.setHorizontalGroup(
            pnlTotalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTotalLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTotalDue, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(46, Short.MAX_VALUE))
        );
        pnlTotalLayout.setVerticalGroup(
            pnlTotalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlTotalLayout.createSequentialGroup()
                .addContainerGap(14, Short.MAX_VALUE)
                .addGroup(pnlTotalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTotalDue)
                    .addComponent(lblTotal))
                .addGap(21, 21, 21))
        );

        pnlDetails.add(pnlTotal);
        pnlTotal.setBounds(630, 340, 260, 60);

        btnProceedToPayment.setBackground(new java.awt.Color(0, 0, 0));
        btnProceedToPayment.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnProceedToPayment.setForeground(new java.awt.Color(255, 255, 255));
        btnProceedToPayment.setText("Proceed to Payment");
        btnProceedToPayment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProceedToPaymentActionPerformed(evt);
            }
        });
        pnlDetails.add(btnProceedToPayment);
        btnProceedToPayment.setBounds(520, 440, 200, 50);

        btnHotel.setBackground(new java.awt.Color(0, 0, 0));
        btnHotel.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnHotel.setForeground(new java.awt.Color(255, 255, 255));
        btnHotel.setText("Book a Hotel Room");
        btnHotel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHotelActionPerformed(evt);
            }
        });
        pnlDetails.add(btnHotel);
        btnHotel.setBounds(780, 440, 200, 50);

        lblOr1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblOr1.setText("OR");
        pnlDetails.add(lblOr1);
        lblOr1.setBounds(740, 460, 20, 16);

        jScrollPane1.setViewportView(pnlDetails);

        pnlMain.add(jScrollPane1);
        jScrollPane1.setBounds(0, 138, 1520, 1638);

        lblInstruction.setFont(new java.awt.Font("Segoe UI", 0, 32)); // NOI18N
        lblInstruction.setForeground(new java.awt.Color(255, 255, 255));
        lblInstruction.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblInstruction.setText("Review your Flight Details");
        pnlMain.add(lblInstruction);
        lblInstruction.setBounds(0, 41, 1530, 43);

        btnBackToSearch.setBackground(new java.awt.Color(0, 0, 0));
        btnBackToSearch.setForeground(new java.awt.Color(255, 255, 255));
        btnBackToSearch.setText("Back To Search");
        btnBackToSearch.setBorder(null);
        btnBackToSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackToSearchActionPerformed(evt);
            }
        });
        pnlMain.add(btnBackToSearch);
        btnBackToSearch.setBounds(1340, 20, 90, 30);

        btnLogOut.setBackground(new java.awt.Color(0, 0, 0));
        btnLogOut.setForeground(new java.awt.Color(255, 255, 255));
        btnLogOut.setText("Log Out");
        btnLogOut.setBorder(null);
        btnLogOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogOutActionPerformed(evt);
            }
        });
        pnlMain.add(btnLogOut);
        btnLogOut.setBounds(1430, 20, 80, 30);

        lblName.setForeground(new java.awt.Color(255, 255, 255));
        lblName.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblName.setText("Full Name");
        pnlMain.add(lblName);
        lblName.setBounds(0, 90, 1530, 16);

        lblTravel.setFont(new java.awt.Font("Perpetua Titling MT", 0, 12)); // NOI18N
        lblTravel.setForeground(new java.awt.Color(255, 255, 255));
        lblTravel.setText("T R A V E L");
        pnlMain.add(lblTravel);
        lblTravel.setBounds(50, 50, 70, 16);

        lblCentral.setFont(new java.awt.Font("Perpetua Titling MT", 0, 12)); // NOI18N
        lblCentral.setForeground(new java.awt.Color(255, 255, 255));
        lblCentral.setText("C E N T R A L");
        pnlMain.add(lblCentral);
        lblCentral.setBounds(50, 70, 90, 15);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlMain, javax.swing.GroupLayout.DEFAULT_SIZE, 1527, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pnlMain, javax.swing.GroupLayout.PREFERRED_SIZE, 1725, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void rbtnVisaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtnVisaActionPerformed
        if (rbtnVisa.isSelected()) {
            txtfieldCardNumber.setText("4917484589897107");
            jMonthChooser1.setMonth(1);
            jYearChooser1.setYear(2026);
            txtfieldCVC.setText("548");
        } else if (rbtnMasterCard.isSelected()) {
            txtfieldCardNumber.setText("5425233430109903");
            jMonthChooser1.setMonth(8);
            jYearChooser1.setYear(2025);
            txtfieldCVC.setText("764");
        }
    }//GEN-LAST:event_rbtnVisaActionPerformed

    private void btnPayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPayActionPerformed
        String bookingReference;

        // Get the logged-in user from the session
        User loggedInUser = SessionManager.getLoggedInUser();
        int userID = loggedInUser.getUserID();

        if (returnDate == "") {
            long depTimeMinutes = convertToMinutes(departureDate);
            String zeros = "000000000000"; // Adjust the number of zeros as needed
            String depTimeString = String.valueOf(depTimeMinutes);

            // Make sure the zeros have the same length as depTimeMinutes
            zeros = zeros.substring(0, zeros.length() - depTimeString.length());

            // Update the booking reference
            bookingReference = "TC"
                    + programManager.retrieveIATA(departureAirport).toUpperCase()
                    + programManager.retrieveIATA(arrivalAirport).toUpperCase()
                    + depTimeMinutes
                    + zeros
                    + numPassengers
                    + UUID.randomUUID().toString().substring(0, 4).toUpperCase();
        } else {
            long depTimeMinutes = convertToMinutes(departureDate);
            long retTimeMinutes = convertToMinutes(returnDate);

            // Update the booking reference
            bookingReference = "TC"
                    + programManager.retrieveIATA(departureAirport).toUpperCase()
                    + programManager.retrieveIATA(arrivalAirport).toUpperCase()
                    + depTimeMinutes
                    + retTimeMinutes
                    + numPassengers
                    + UUID.randomUUID().toString().substring(0, 4).toUpperCase();
        }

        // Call the method to add flight booking
        if (oneWay){
            programManager.addOneWayFlightBooking(bookingReference, numPassengers, departureFlightPrice, "Confirmed", userID, programManager.retrieveClassID(travelClass), depFlightID, departureFlightPrice);
        } else {
            programManager.addReturnFlightBooking(bookingReference, numPassengers, departureFlightPrice + returnFlightPrice, "Confirmed", userID, programManager.retrieveClassID(travelClass), depFlightID, retFlightID, departureFlightPrice + returnFlightPrice);
        }

        FlightBookingConfirmationUI mainFrame = new FlightBookingConfirmationUI(bookingReference);

        // Set the visibility of the SearchFlightUI frame
        mainFrame.setVisible(true);

        // Close the current frame (assuming this is in AvailableFlightsSearch)
        this.dispose();
    }//GEN-LAST:event_btnPayActionPerformed

    private void chkboxTsnCsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkboxTsnCsActionPerformed
        if (chkboxTsnCs.isSelected()) {
            btnPay.setEnabled(true);
        } else {
            btnPay.setEnabled(false);
        }
    }//GEN-LAST:event_chkboxTsnCsActionPerformed

    private void chkboxUserTravelingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkboxUserTravelingActionPerformed

    }//GEN-LAST:event_chkboxUserTravelingActionPerformed

    private void btnProceedToPaymentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProceedToPaymentActionPerformed
        btnProceedToPayment.setVisible(false);
        btnHotel.setVisible(false);
        lblOr1.setVisible(false);

        lblPaymentDetails.setVisible(true);
        lblPaymentMethod.setVisible(true);

        rbtnVisa.setVisible(true);
        rbtnMasterCard.setVisible(true);
        pnlPaymentDetails.setVisible(true);

        // Initialize passenger arrays
        passengerFirstName = new String[numPassengers];
        passengerLastName = new String[numPassengers];
        passengerAge = new int[numPassengers];

        if (chkboxUserTraveling.isSelected()) {
            for (int i = 0; i < numPassengers - 1; i++) {
                JPanel panel = new JPanel();
                JTextField firstNameField = new JTextField(10);
                JTextField lastNameField = new JTextField(10);
                JSpinner ageSpinner = new JSpinner(new SpinnerNumberModel(0, 0, 150, 1));

                panel.add(new JLabel("First Name:"));
                panel.add(firstNameField);
                panel.add(new JLabel("Last Name:"));
                panel.add(lastNameField);
                panel.add(new JLabel("Age:"));
                panel.add(ageSpinner);

                int result = JOptionPane.showConfirmDialog(null, panel, "Enter information for Passenger " + (i + 2),
                        JOptionPane.OK_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE);

                if (result == JOptionPane.OK_OPTION) {
                    if (firstNameField.getText().trim().isEmpty() || lastNameField.getText().trim().isEmpty()) {
                        // Show an error message and prevent the user from proceeding
                        JOptionPane.showMessageDialog(null, "Please enter both First Name and Last Name.", "Error", JOptionPane.ERROR_MESSAGE);
                        i--; // Retry for the same person
                    } else {
                        passengerFirstName[i] = firstNameField.getText().trim();
                        passengerLastName[i] = lastNameField.getText().trim();
                        passengerAge[i] = (int) ageSpinner.getValue();
                    }

                } else {
                    i--; // Retry for the same person
                }
            }
        } else {
            for (int i = 0; i < numPassengers; i++) {
                JPanel panel = new JPanel();
                JTextField firstNameField = new JTextField(10);
                JTextField lastNameField = new JTextField(10);
                JSpinner ageSpinner = new JSpinner(new SpinnerNumberModel(0, 0, 150, 1));

                panel.add(new JLabel("First Name:"));
                panel.add(firstNameField);
                panel.add(new JLabel("Last Name:"));
                panel.add(lastNameField);
                panel.add(new JLabel("Age:"));
                panel.add(ageSpinner);

                int result = JOptionPane.showConfirmDialog(null, panel, "Enter information for Passenger " + (i + 1),
                        JOptionPane.OK_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE);

                if (result == JOptionPane.OK_OPTION) {
                    if (firstNameField.getText().trim().isEmpty() || lastNameField.getText().trim().isEmpty()) {
                        // Show an error message and prevent the user from proceeding
                        JOptionPane.showMessageDialog(null, "Please enter both First Name and Last Name.", "Error", JOptionPane.ERROR_MESSAGE);
                        i--; // Retry for the same person
                    } else {
                        passengerFirstName[i] = firstNameField.getText().trim();
                        passengerLastName[i] = lastNameField.getText().trim();
                        passengerAge[i] = (int) ageSpinner.getValue();
                    }
                } else {
                    i--; // Retry for the same person
                }
            }
        }

        chkboxUserTraveling.setVisible(false);
    }//GEN-LAST:event_btnProceedToPaymentActionPerformed

    private void rbtnMasterCardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtnMasterCardActionPerformed
        if (rbtnVisa.isSelected()) {
            txtfieldCardNumber.setText("4917484589897107");
            jMonthChooser1.setMonth(1);
            jYearChooser1.setYear(2026);
            txtfieldCVC.setText("548");
        } else if (rbtnMasterCard.isSelected()) {
            txtfieldCardNumber.setText("5425233430109903");
            jMonthChooser1.setMonth(8);
            jYearChooser1.setYear(2025);
            txtfieldCVC.setText("764");
        }
    }//GEN-LAST:event_rbtnMasterCardActionPerformed

    private void btnHotelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHotelActionPerformed
        HotelSearchUI hotelSearch = new HotelSearchUI(departureAirport, arrivalAirport, departureDate, returnDate, numPassengers, travelClass, oneWay, departureFlightPrice, returnFlightPrice, departureTime, arrivalTime, rDepartureTime, rArrivalTime, depFlightID, retFlightID);
        hotelSearch.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnHotelActionPerformed

    private void btnBackToSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackToSearchActionPerformed
        SearchFlightUI searchFlight = new SearchFlightUI();
        searchFlight.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnBackToSearchActionPerformed

    private void btnLogOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogOutActionPerformed
        LogOutUI logOut = new LogOutUI();

        logOut.setVisible(true);

        this.dispose();
    }//GEN-LAST:event_btnLogOutActionPerformed

    private void populateFlightDetails() {
        ProgramManager programManager = new ProgramManager();

        lblDepartureAirport.setText(departureAirport + " (" + programManager.retrieveIATA(departureAirport) + ")");
        lblArrivalAirport.setText(arrivalAirport + " (" + programManager.retrieveIATA(arrivalAirport) + ")");

        lblDepartureTime.setText(departureTime);
        lblArrivalTime.setText(arrivalTime);

        lblNumPassengers.setText(numPassengers + " Passenger(s)");

        lblClass.setText(travelClass + " Class");

        lblDepartureFlightTotal.setText(Float.toString(departureFlightPrice));

        if (returnDate != null) {
            lblRDepartureAirport.setText(arrivalAirport + " (" + programManager.retrieveIATA(arrivalAirport) + ")");
            lblRArrivalAirport.setText(departureAirport + " (" + programManager.retrieveIATA(departureAirport) + ")");

            lblRDepartureTime.setText(rDepartureTime);
            lblRArrivalTime.setText(rArrivalTime);

            lblNumPassengers1.setText(numPassengers + " Passenger(s)");

            lblClass1.setText(travelClass + " Class");

            lblReturnFlightTotal1.setText(Float.toString(returnFlightPrice));
        } else {
            lblReturnFlight.setVisible(false);

            lblRDeparture.setVisible(false);
            lblRArrival.setVisible(false);

            lblRDepartureAirport.setVisible(false);
            lblRArrivalAirport.setVisible(false);

            lblRDepartureTime.setVisible(false);
            lblRArrivalTime.setVisible(false);

            lblNumPassengers1.setVisible(false);
            lblReturnFlightTotal1.setVisible(false);

            lblClass1.setVisible(false);
            lblReturnFlightR1.setVisible(false);
        }

        lblTotal.setText(Float.toString(departureFlightPrice + returnFlightPrice));

        if (!SessionManager.isLoggedIn()) {
            txtfieldCardOwner.setText("User User");
        } else {
            txtfieldCardOwner.setText(SessionManager.getLoggedInUsername());
        }

        txtfieldResidenceBumber.setText("12");
        txtfieldStreetName.setText("Cowley Avenue");
        txtfieldTown.setText("Cape Town");
        txtfieldCountry.setText("South Africa");
        txtfieldPostalCode.setText("8001");

        if (chkboxTsnCs.isSelected()) {
            btnPay.setEnabled(true);
        } else {
            btnPay.setEnabled(false);
        }

    }

    // Function to convert date string to minutes
    private long convertToMinutes(String dateString) {
        try {
            SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
            Date date = dateFormat.parse(dateString);
            return date.getTime() / (60 * 1000);
        } catch (ParseException e) {
            e.printStackTrace();
            return 0; // Handle the exception according to your requirements
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FlightBookingUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FlightBookingUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FlightBookingUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FlightBookingUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FlightBookingUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBackToSearch;
    private javax.swing.JButton btnHotel;
    private javax.swing.JButton btnLogOut;
    private javax.swing.JButton btnPay;
    private javax.swing.JButton btnProceedToPayment;
    private javax.swing.JCheckBox chkboxTsnCs;
    private javax.swing.JCheckBox chkboxUserTraveling;
    private javax.swing.JLabel jLabel20;
    private com.toedter.calendar.JMonthChooser jMonthChooser1;
    private javax.swing.JScrollPane jScrollPane1;
    private com.toedter.calendar.JYearChooser jYearChooser1;
    private javax.swing.JLabel lblArrival;
    private javax.swing.JLabel lblArrivalAirport;
    private javax.swing.JLabel lblArrivalTime;
    private javax.swing.JLabel lblBillingAddress;
    private javax.swing.JLabel lblBillingAddressLine;
    private javax.swing.JLabel lblCVC;
    private javax.swing.JLabel lblCardDetails;
    private javax.swing.JLabel lblCardDetailsLine;
    private javax.swing.JLabel lblCardNumber;
    private javax.swing.JLabel lblCardOwner;
    private javax.swing.JLabel lblCentral;
    private javax.swing.JLabel lblClass;
    private javax.swing.JLabel lblClass1;
    private javax.swing.JLabel lblCountry;
    private javax.swing.JLabel lblDeparture;
    private javax.swing.JLabel lblDepartureAirport;
    private javax.swing.JLabel lblDepartureFlight;
    private javax.swing.JLabel lblDepartureFlightR;
    private javax.swing.JLabel lblDepartureFlightTotal;
    private javax.swing.JLabel lblDepartureTime;
    private javax.swing.JLabel lblExpirationDate;
    private javax.swing.JLabel lblFlightDetails;
    private javax.swing.JLabel lblInstruction;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblNumPassengers;
    private javax.swing.JLabel lblNumPassengers1;
    private javax.swing.JLabel lblOr1;
    private javax.swing.JLabel lblPaymentDetails;
    private javax.swing.JLabel lblPaymentMethod;
    private javax.swing.JLabel lblPostalCode;
    private javax.swing.JLabel lblRArrival;
    private javax.swing.JLabel lblRArrivalAirport;
    private javax.swing.JLabel lblRArrivalTime;
    private javax.swing.JLabel lblRDeparture;
    private javax.swing.JLabel lblRDepartureAirport;
    private javax.swing.JLabel lblRDepartureTime;
    private javax.swing.JLabel lblResidenceNumber;
    private javax.swing.JLabel lblReturnFlight;
    private javax.swing.JLabel lblReturnFlightR1;
    private javax.swing.JLabel lblReturnFlightTotal1;
    private javax.swing.JLabel lblStreetName;
    private javax.swing.JLabel lblTotal;
    private javax.swing.JLabel lblTotalDue;
    private javax.swing.JLabel lblTown;
    private javax.swing.JLabel lblTravel;
    private javax.swing.JPanel pnlDetails;
    private javax.swing.JPanel pnlMain;
    private javax.swing.JPanel pnlOneWayFlight;
    private javax.swing.JPanel pnlPaymentDetails;
    private javax.swing.JPanel pnlReturningFlight;
    private javax.swing.JPanel pnlTotal;
    private javax.swing.JRadioButton rbtnMasterCard;
    private javax.swing.JRadioButton rbtnVisa;
    private javax.swing.ButtonGroup rbtngrpPaymentMethod;
    private javax.swing.JTextField txtfieldCVC;
    private javax.swing.JTextField txtfieldCardNumber;
    private javax.swing.JTextField txtfieldCardOwner;
    private javax.swing.JTextField txtfieldCountry;
    private javax.swing.JTextField txtfieldPostalCode;
    private javax.swing.JTextField txtfieldResidenceBumber;
    private javax.swing.JTextField txtfieldStreetName;
    private javax.swing.JTextField txtfieldTown;
    // End of variables declaration//GEN-END:variables
}
